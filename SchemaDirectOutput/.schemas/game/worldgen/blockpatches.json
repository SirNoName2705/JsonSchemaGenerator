{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "BlockPatchConfig",
  "type": "object",
  "properties": {
    "chanceMultiplier": {
      "$ref": "#/definitions/NatFloat"
    },
    "patches": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BlockPatch"
      }
    }
  },
  "definitions": {
    "NatFloat": {
      "type": "object",
      "description": "A more natural random number generator (nature usually doesn't grow by the exact same numbers nor does it completely randomly)",
      "properties": {
        "offset": {
          "type": "number",
          "format": "float"
        },
        "avg": {
          "type": "number",
          "format": "float"
        },
        "var": {
          "type": "number",
          "format": "float"
        },
        "dist": {
          "$ref": "#/definitions/EnumDistribution"
        }
      }
    },
    "EnumDistribution": {
      "type": "string",
      "description": "The distribution of the random numbers ",
      "x-enumNames": [
        "UNIFORM",
        "TRIANGLE",
        "GAUSSIAN",
        "NARROWGAUSSIAN",
        "INVERSEGAUSSIAN",
        "NARROWINVERSEGAUSSIAN",
        "INVEXP",
        "STRONGINVEXP",
        "STRONGERINVEXP",
        "DIRAC",
        "VERYNARROWGAUSSIAN"
      ],
      "enum": [
        "uniform",
        "triangle",
        "gaussian",
        "narrowgaussian",
        "inversegaussian",
        "narrowinversegaussian",
        "invexp",
        "stronginvexp",
        "strongerinvexp",
        "dirac",
        "verynarrowgaussian"
      ]
    },
    "BlockPatch": {
      "type": "object",
      "properties": {
        "blockCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "chance": {
          "type": "number",
          "format": "float"
        },
        "minTemp": {
          "type": "integer",
          "format": "int32"
        },
        "maxTemp": {
          "type": "integer",
          "format": "int32"
        },
        "minRain": {
          "type": "number",
          "format": "float"
        },
        "maxRain": {
          "type": "number",
          "format": "float"
        },
        "minForest": {
          "type": "number",
          "format": "float"
        },
        "maxForest": {
          "type": "number",
          "format": "float"
        },
        "minShrub": {
          "type": "number",
          "format": "float"
        },
        "maxShrub": {
          "type": "number",
          "format": "float"
        },
        "minFertility": {
          "type": "number",
          "format": "float"
        },
        "maxFertility": {
          "type": "number",
          "format": "float"
        },
        "minY": {
          "type": "number",
          "format": "float"
        },
        "maxY": {
          "type": "number",
          "format": "float"
        },
        "placement": {
          "$ref": "#/definitions/EnumBlockPatchPlacement"
        },
        "treeType": {
          "$ref": "#/definitions/EnumTreeType"
        },
        "offsetX": {
          "$ref": "#/definitions/NatFloat"
        },
        "offsetZ": {
          "$ref": "#/definitions/NatFloat"
        },
        "blockCodeIndex": {
          "$ref": "#/definitions/NatFloat"
        },
        "quantity": {
          "$ref": "#/definitions/NatFloat"
        },
        "mapCode": {
          "type": "string"
        },
        "randomMapCodePool": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minWaterDepth": {
          "type": "integer",
          "format": "int32"
        },
        "maxHeightDifferential": {
          "type": "integer",
          "format": "int32"
        },
        "postPass": {
          "type": "boolean"
        },
        "prePass": {
          "type": "boolean"
        }
      }
    },
    "EnumBlockPatchPlacement": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ReplaceSurface",
        "OnSurface",
        "NearWater",
        "Anywhere",
        "Underground",
        "UnderWater",
        "NearSeaWater",
        "UnderSeaWater",
        "UnderTrees",
        "OnTrees",
        "OnSurfacePlusUnderTrees"
      ],
      "enum": [
        "replaceSurface",
        "onSurface",
        "nearWater",
        "anywhere",
        "underground",
        "underWater",
        "nearSeaWater",
        "underSeaWater",
        "underTrees",
        "onTrees",
        "onSurfacePlusUnderTrees"
      ]
    },
    "EnumTreeType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Any",
        "Decidious",
        "Conifer",
        "Tropical",
        "Acacia"
      ],
      "enum": [
        "any",
        "decidious",
        "conifer",
        "tropical",
        "acacia"
      ]
    }
  }
}